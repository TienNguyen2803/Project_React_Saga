{"ast":null,"code":"import { createStore, compose, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"../reducers\";\nconst composeEnhancers = process.env.NODE_ENV !== 'production' && typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n  shouldHotReload: false\n}) : compose;\n\nconst configStore = () => {\n  const middelWare = [thunk];\n  const enhancer = [applyMiddleware(...middelWare)];\n  const store = createStore(rootReducer, composeEnhancers(...enhancer));\n  return store;\n};\n\nexport default configStore;","map":{"version":3,"sources":["/Users/minhtien/Documents/react/redux-saga/src/containers/redux/configStore.js"],"names":["createStore","compose","applyMiddleware","thunk","rootReducer","composeEnhancers","process","env","NODE_ENV","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","shouldHotReload","configStore","middelWare","enhancer","store"],"mappings":"AAAA,SAASA,WAAT,EAAuBC,OAAvB,EAAiCC,eAAjC,QAAwD,OAAxD;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,WAAP,MAAwB,aAAxB;AAGA,MAAMC,gBAAgB,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,IACE,OAAOC,MAAP,KAAkB,QADpB,IAEEA,MAAM,CAACC,oCAFT,GAGDD,MAAM,CAACC,oCAAP,CAA4C;AAC1CC,EAAAA,eAAe,EAAE;AADyB,CAA5C,CAHC,GAKIV,OAL7B;;AAOA,MAAMW,WAAW,GAAG,MAAM;AACxB,QAAMC,UAAU,GAAG,CAACV,KAAD,CAAnB;AACA,QAAMW,QAAQ,GAAG,CAACZ,eAAe,CAAC,GAAGW,UAAJ,CAAhB,CAAjB;AACA,QAAME,KAAK,GAAGf,WAAW,CAACI,WAAD,EAAcC,gBAAgB,CAAC,GAAGS,QAAJ,CAA9B,CAAzB;AACA,SAAOC,KAAP;AACD,CALD;;AAOA,eAAeH,WAAf","sourcesContent":["import { createStore , compose , applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"../reducers\";\n\n\nconst composeEnhancers = process.env.NODE_ENV !== 'production'\n                        && typeof window === 'object'\n                        && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n                        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n                          shouldHotReload: false\n                        }) : compose;\n\nconst configStore = () => {\n  const middelWare = [thunk];\n  const enhancer = [applyMiddleware(...middelWare)];\n  const store = createStore(rootReducer, composeEnhancers(...enhancer));\n  return store;\n};\n\nexport default configStore;\n"]},"metadata":{},"sourceType":"module"}