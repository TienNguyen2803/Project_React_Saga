{"ast":null,"code":"var _jsxFileName = \"/Users/minhtien/Documents/react/redux-saga/src/containers/TaskBorad/index.js\";\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/Add';\nimport styles from './styles';\nimport { withStyles } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport { STATUS } from '../../constants/index';\n\nclass TaskBoard extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderTaskBoard = () => {\n      let html = null;\n      html = /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }\n      }, STATUS.map((status, index) => {\n        return /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          md: 4,\n          xs: 12,\n          key: status.value,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 29\n          }\n        }, status.label);\n      }));\n      return html;\n    };\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.taskboard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(AddIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 21\n      }\n    }), \"Th\\xEAm m\\u1EDBi c\\xF4ng vi\\u1EC7c\"), this.renderTaskBoard());\n  }\n\n}\n\nexport default withStyles(styles)(TaskBoard);","map":{"version":3,"sources":["/Users/minhtien/Documents/react/redux-saga/src/containers/TaskBorad/index.js"],"names":["React","Component","Button","AddIcon","styles","withStyles","Grid","STATUS","TaskBoard","renderTaskBoard","html","map","status","index","value","label","render","classes","props","taskboard"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,MAAT,QAAuB,uBAAvB;;AAEA,MAAMC,SAAN,SAAwBP,SAAxB,CAAkC;AAAA;AAAA;;AAAA,SAc9BQ,eAd8B,GAcZ,MAAM;AACpB,UAAIC,IAAI,GAAG,IAAX;AACAA,MAAAA,IAAI,gBACA,oBAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEQH,MAAM,CAACI,GAAP,CAAW,CAACC,MAAD,EAASC,KAAT,KAAmB;AAC1B,4BACI,oBAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAG,CAAhB;AAAmB,UAAA,EAAE,EAAE,EAAvB;AAA4B,UAAA,GAAG,EAAID,MAAM,CAACE,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACSF,MAAM,CAACG,KADhB,CADJ;AAKH,OAND,CAFR,CADJ;AAaA,aAAOL,IAAP;AACH,KA9B6B;AAAA;;AAC9BM,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA;AAAF,QAAc,KAAKC,KAAzB;AACA,wBACI;AAAK,MAAA,SAAS,EAAED,OAAO,CAACE,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAA4B,MAAA,KAAK,EAAC,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,uCADJ,EAKK,KAAKV,eAAL,EALL,CADJ;AAUH;;AAb6B;;AAiClC,eAAeJ,UAAU,CAACD,MAAD,CAAV,CAAmBI,SAAnB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/Add';\nimport styles from './styles';\nimport { withStyles } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport { STATUS } from '../../constants/index';\n\nclass TaskBoard extends Component {\n    render() {\n        const { classes } = this.props;\n        return (\n            <div className={classes.taskboard}>\n                <Button variant=\"contained\" color=\"primary\">\n                    <AddIcon />Thêm mới công việc\n                </Button>\n\n                {this.renderTaskBoard()}\n\n            </div>\n        );\n    }\n    renderTaskBoard = () => {\n        let html = null;\n        html = (\n            <Grid container spacing={2}>\n                {\n                    STATUS.map((status, index) => {\n                        return (\n                            <Grid item md= {4} xs={12 } key = {status.value}> \n                                    {status.label}\n                            </Grid>\n                        )\n                    })\n                }\n            </Grid>\n        )\n        return html;\n    }\n}\n\nexport default withStyles(styles)(TaskBoard);"]},"metadata":{},"sourceType":"module"}