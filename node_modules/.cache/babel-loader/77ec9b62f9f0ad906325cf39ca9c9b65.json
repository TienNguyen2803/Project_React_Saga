{"ast":null,"code":"var _jsxFileName = \"/Users/minhtien/Documents/react/project-saga/src/containers/TaskBorad/index.js\";\nimport React, { Component } from \"react\";\nimport styles from \"./styles\";\nimport { withStyles } from \"@material-ui/core\";\nimport { STATUS } from \"../../constants/index\";\nimport TaskList from \"../../components/TaskList\";\nimport { Grid, Button } from \"@material-ui/core\";\nimport { Add as AddIcon } from \"@material-ui/icons\";\nimport TaskForm from \"../../components/TaskForm\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport * as taskActions from \"../../actions/tasks\";\nimport SearchBox from '../../components/SearchBox';\n\nclass TaskBoard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      onOpenForm: false\n    };\n\n    this.handleFilter = e => {\n      const {\n        onTaskActions\n      } = this.props;\n      const {\n        fetchTasks\n      } = onTaskActions;\n      fetchTasks();\n      console.log('e', e);\n    };\n\n    this.renderSearchBox = () => {\n      let html = null;\n      html = /*#__PURE__*/React.createElement(SearchBox, {\n        handlChange: this.handleFilter,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 7\n        }\n      });\n      return html;\n    };\n\n    this.onOpenForm = () => {\n      this.setState({\n        onOpenForm: true\n      });\n    };\n\n    this.onClose = () => {\n      this.setState({\n        onOpenForm: false\n      });\n    };\n\n    this.renderTaskForm = () => {\n      let html = null;\n      html = /*#__PURE__*/React.createElement(TaskForm, {\n        onClose: this.onClose,\n        onOpenForm: this.state.onOpenForm,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 7\n        }\n      });\n      return html;\n    };\n\n    this.renderTaskBoard = () => {\n      let {\n        listTask\n      } = this.props;\n      let html = null;\n      html = /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 7\n        }\n      }, STATUS.map(status => {\n        const listTaskFilter = listTask.filter(tasks => tasks.status === status.value);\n        return /*#__PURE__*/React.createElement(TaskList, {\n          key: status.value,\n          status: status,\n          tasks: listTaskFilter,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }\n        });\n      }));\n      return html;\n    };\n  }\n\n  componentDidMount() {\n    const {\n      onTaskActions\n    } = this.props;\n    const {\n      fetchTasks\n    } = onTaskActions;\n    fetchTasks();\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.taskboard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.onOpenForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(AddIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    }), \"Th\\xEAm m\\u1EDBi c\\xF4ng vi\\u1EC7c\"), this.renderSearchBox(), this.renderTaskBoard(), this.renderTaskForm());\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    listTask: state.tasks.listTasks\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTaskActions: bindActionCreators(taskActions, dispatch)\n  };\n};\n\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(TaskBoard));","map":{"version":3,"sources":["/Users/minhtien/Documents/react/project-saga/src/containers/TaskBorad/index.js"],"names":["React","Component","styles","withStyles","STATUS","TaskList","Grid","Button","Add","AddIcon","TaskForm","connect","bindActionCreators","taskActions","SearchBox","TaskBoard","state","onOpenForm","handleFilter","e","onTaskActions","props","fetchTasks","console","log","renderSearchBox","html","setState","onClose","renderTaskForm","renderTaskBoard","listTask","map","status","listTaskFilter","filter","tasks","value","componentDidMount","render","classes","taskboard","mapStateToProps","listTasks","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport styles from \"./styles\";\nimport { withStyles } from \"@material-ui/core\";\nimport { STATUS } from \"../../constants/index\";\nimport TaskList from \"../../components/TaskList\";\nimport { Grid, Button } from \"@material-ui/core\";\nimport { Add as AddIcon } from \"@material-ui/icons\";\nimport TaskForm from \"../../components/TaskForm\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport * as taskActions from \"../../actions/tasks\";\nimport SearchBox from '../../components/SearchBox';\nclass TaskBoard extends Component {\n  componentDidMount() {\n    const { onTaskActions } = this.props;\n    const { fetchTasks } = onTaskActions;\n    fetchTasks();\n  }\n  state = {\n    onOpenForm: false,\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.taskboard}>\n        <Button variant=\"contained\" color=\"primary\" onClick={this.onOpenForm}>\n          <AddIcon />\n          Thêm mới công việc\n        </Button>\n        {this.renderSearchBox()}\n        {this.renderTaskBoard()}\n        {this.renderTaskForm()}\n      </div>\n    );\n  }\n  handleFilter = (e) => {\n    const { onTaskActions } = this.props;\n    const { fetchTasks } = onTaskActions;\n    fetchTasks();\n    console.log('e',e);\n  }\n  renderSearchBox = () => {\n    let html = null;\n    html = (\n      <SearchBox\n      handlChange = {this.handleFilter}\n      />\n    )\n    return html;\n  }\n  onOpenForm = () => {\n    this.setState({\n      onOpenForm: true,\n    });\n  };\n\n  onClose = () => {\n    this.setState({\n      onOpenForm: false,\n    });\n  };\n  renderTaskForm = () => {\n    let html = null;\n    html = (\n      <TaskForm onClose={this.onClose} onOpenForm={this.state.onOpenForm} />\n    );\n    return html;\n  };\n  renderTaskBoard = () => {\n    let { listTask } = this.props;\n\n    let html = null;\n    html = (\n      <Grid container spacing={2}>\n        {STATUS.map((status) => {\n          const listTaskFilter = listTask.filter(\n            (tasks) => tasks.status === status.value\n          );\n          return (\n            <TaskList\n              key={status.value}\n              status={status}\n              tasks={listTaskFilter}\n            />\n          );\n        })}\n      </Grid>\n    );\n    return html;\n  };\n}\nconst mapStateToProps = (state) => {\n  return {\n    listTask: state.tasks.listTasks,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onTaskActions: bindActionCreators(taskActions, dispatch),\n  };\n};\n\nexport default withStyles(styles)(\n  connect(mapStateToProps, mapDispatchToProps)(TaskBoard)\n);\n"]},"metadata":{},"sourceType":"module"}