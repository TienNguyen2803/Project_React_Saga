{"ast":null,"code":"var _jsxFileName = \"/Users/minhtien/Documents/react/redux-saga/src/containers/TaskBorad/index.js\";\nimport React, { Component } from 'react';\nimport styles from './styles';\nimport { withStyles } from '@material-ui/core';\nimport { STATUS } from '../../constants/index';\nimport TaskList from '../../containers/TaskList';\nimport { Grid, Button, AddIcon } from '../../commom/ModulMUI';\nimport TaskForm from '../TaskForm';\nimport { connect, bindActionCreators } from 'react-redux';\nimport * as taskActions from \"../../actions/tasks\";\n\nclass TaskBoard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      onOpenForm: false\n    };\n\n    this.onOpenForm = () => {\n      this.setState({\n        onOpenForm: true\n      });\n    };\n\n    this.onClose = () => {\n      this.setState({\n        onOpenForm: false\n      });\n    };\n\n    this.renderTaskForm = () => {\n      let html = null;\n      html = /*#__PURE__*/React.createElement(TaskForm, {\n        onClose: this.onClose,\n        onOpenForm: this.state.onOpenForm,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }\n      });\n      return html;\n    };\n\n    this.renderTaskBoard = () => {\n      const {\n        listTask\n      } = this.props;\n      let html = null;\n      html = /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }\n      }, STATUS.map(status => {\n        const listTaskFilter = listTask.filter(tasks => tasks.status === status.value);\n        return /*#__PURE__*/React.createElement(TaskList, {\n          key: status.value,\n          status: status,\n          tasks: listTaskFilter,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 32\n          }\n        });\n      }));\n      return html;\n    };\n  }\n\n  componentDidMount() {\n    const {\n      onTaskActions\n    } = this.props;\n    const {\n      fetchTasksRequest\n    } = onTaskActions;\n    fetchTasksRequest();\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.taskboard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.onOpenForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(AddIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }\n    }), \"Th\\xEAm m\\u1EDBi c\\xF4ng vi\\u1EC7c\"), this.renderTaskBoard(), this.renderTaskForm());\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    listTask: this.state.tasks\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTaskActions: bindActionCreators(taskActions, dispatch)\n  };\n};\n\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(TaskBoard));","map":{"version":3,"sources":["/Users/minhtien/Documents/react/redux-saga/src/containers/TaskBorad/index.js"],"names":["React","Component","styles","withStyles","STATUS","TaskList","Grid","Button","AddIcon","TaskForm","connect","bindActionCreators","taskActions","TaskBoard","state","onOpenForm","setState","onClose","renderTaskForm","html","renderTaskBoard","listTask","props","map","status","listTaskFilter","filter","tasks","value","componentDidMount","onTaskActions","fetchTasksRequest","render","classes","taskboard","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport styles from './styles';\nimport { withStyles } from '@material-ui/core';\nimport { STATUS } from '../../constants/index';\nimport TaskList from '../../containers/TaskList';\nimport {Grid ,Button , AddIcon} from '../../commom/ModulMUI';\nimport TaskForm from '../TaskForm';\nimport { connect , bindActionCreators} from 'react-redux';\nimport * as taskActions from \"../../actions/tasks\";\n\n\nclass TaskBoard extends Component {\n  componentDidMount() {\n    const { onTaskActions } = this.props;\n    const { fetchTasksRequest } = onTaskActions;\n    fetchTasksRequest();\n  }\n    state = {\n        onOpenForm : false\n    }\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <div className={classes.taskboard}>\n                <Button variant=\"contained\" color=\"primary\" onClick={this.onOpenForm}>\n                    <AddIcon />Thêm mới công việc\n                </Button>\n\n                {this.renderTaskBoard()}\n                {this.renderTaskForm()}\n            </div>\n        );\n    }\n    onOpenForm = () => {\n        this.setState({\n            onOpenForm : true\n        })\n    }\n\n    onClose = () => {\n        this.setState({\n            onOpenForm : false\n        })\n    }\n    renderTaskForm = () => {\n        let html = null;\n        html = (\n            <TaskForm\n                onClose = {this.onClose}\n                onOpenForm = {this.state.onOpenForm}\n             />\n        )\n        return html;\n    }\n    renderTaskBoard = () => {\n        const {listTask} = this.props;\n        let html = null;\n        html = (\n            <Grid container spacing={2}>\n                {\n                    STATUS.map((status) => {\n                        const listTaskFilter = listTask.filter(tasks =>\n                            tasks.status === status.value\n                        )\n                        return <TaskList\n                                key ={status.value}\n                                status = {status}\n                                tasks = {listTaskFilter}\n                        />\n                    })\n                }\n            </Grid>\n        )\n        return html;\n    }\n}\nconst mapStateToProps = state => {\n  return {\n    listTask : this.state.tasks\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onTaskActions: bindActionCreators(taskActions, dispatch),\n  };\n};\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(TaskBoard));\n"]},"metadata":{},"sourceType":"module"}