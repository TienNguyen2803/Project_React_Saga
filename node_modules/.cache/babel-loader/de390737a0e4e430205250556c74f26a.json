{"ast":null,"code":"import { createStore, compose, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"../reducers/index\";\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from '../saga';\nconst composeEnhancers = process.env.NODE_ENV !== 'production' && typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n  shouldHotReload: false\n}) : compose;\nconst sagaMiddleware = createSagaMiddleware();\n\nconst configStore = () => {\n  const middelWare = [thunk, sagaMiddleware];\n  const enhancer = [applyMiddleware(...middelWare)];\n  const store = createStore(rootReducer, composeEnhancers(...enhancer));\n  sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nexport default configStore;","map":{"version":3,"sources":["/Users/minhtien/Documents/react/project-saga/src/redux/configStore.js"],"names":["createStore","compose","applyMiddleware","thunk","rootReducer","createSagaMiddleware","rootSaga","composeEnhancers","process","env","NODE_ENV","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","shouldHotReload","sagaMiddleware","configStore","middelWare","enhancer","store","run"],"mappings":"AAAA,SAASA,WAAT,EAAuBC,OAAvB,EAAiCC,eAAjC,QAAwD,OAAxD;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,QAAP,MAAqB,SAArB;AAGA,MAAMC,gBAAgB,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,IACE,OAAOC,MAAP,KAAkB,QADpB,IAEEA,MAAM,CAACC,oCAFT,GAGDD,MAAM,CAACC,oCAAP,CAA4C;AAC1CC,EAAAA,eAAe,EAAE;AADyB,CAA5C,CAHC,GAKIZ,OAL7B;AAOA,MAAMa,cAAc,GAAGT,oBAAoB,EAA3C;;AACA,MAAMU,WAAW,GAAG,MAAM;AACxB,QAAMC,UAAU,GAAG,CAACb,KAAD,EAAQW,cAAR,CAAnB;AACA,QAAMG,QAAQ,GAAG,CAACf,eAAe,CAAC,GAAGc,UAAJ,CAAhB,CAAjB;AACA,QAAME,KAAK,GAAGlB,WAAW,CAACI,WAAD,EAAcG,gBAAgB,CAAC,GAAGU,QAAJ,CAA9B,CAAzB;AACAH,EAAAA,cAAc,CAACK,GAAf,CAAmBb,QAAnB;AACA,SAAOY,KAAP;AACD,CAND;;AAQA,eAAeH,WAAf","sourcesContent":["import { createStore , compose , applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"../reducers/index\";\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from '../saga';\n\n\nconst composeEnhancers = process.env.NODE_ENV !== 'production'\n                        && typeof window === 'object'\n                        && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n                        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n                          shouldHotReload: false\n                        }) : compose;\n\nconst sagaMiddleware = createSagaMiddleware()\nconst configStore = () => {\n  const middelWare = [thunk, sagaMiddleware];\n  const enhancer = [applyMiddleware(...middelWare)];\n  const store = createStore(rootReducer, composeEnhancers(...enhancer));\n  sagaMiddleware.run(rootSaga)\n  return store;\n};\n\nexport default configStore;\n"]},"metadata":{},"sourceType":"module"}