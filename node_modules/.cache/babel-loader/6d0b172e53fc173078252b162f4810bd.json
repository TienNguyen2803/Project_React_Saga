{"ast":null,"code":"import { toastError } from \"../commom/helper/toastHelper\";\nimport * as taskConstant from \"../constants/tasks\";\nimport { findIndex } from 'lodash';\nconst initialState = {\n  listTasks: [],\n  taskEditing: null\n};\n\nconst tasks = (state = initialState, action) => {\n  switch (action.type) {\n    case taskConstant.FETCH_TASK:\n      {\n        return { ...state,\n          listTasks: []\n        };\n      }\n\n    case taskConstant.FETCH_TASK_SUCCESS:\n      {\n        const {\n          data,\n          error\n        } = action.payload;\n        toastError(error);\n        return { ...state,\n          listTasks: data\n        };\n      }\n\n    case taskConstant.FETCH_TASK_FAILE:\n      {\n        const {\n          error\n        } = action.payload;\n        toastError(error);\n        console.log(action.payload);\n        return { ...state,\n          listTasks: []\n        };\n      }\n\n    case taskConstant.FETCH_FILTER:\n      {\n        return { ...state\n        };\n      }\n\n    case taskConstant.FILTERED_SUCCESS:\n      {\n        const {\n          data\n        } = action.payload;\n        return { ...state,\n          listTasks: data\n        };\n      }\n\n    case taskConstant.ADD_TASK:\n      {\n        return { ...state\n        };\n      }\n\n    case taskConstant.ADD_TASK_SUCCESS:\n      {\n        const {\n          data\n        } = action.payload;\n        return { ...state,\n          listTasks: state.listTasks.concat([data])\n        };\n      }\n\n    case taskConstant.ADD_TASK_FAILE:\n      {\n        const {\n          error\n        } = action.payload;\n        toastError(error);\n        return { ...state\n        };\n      }\n\n    case taskConstant.TASK_EDITTING:\n      {\n        const {\n          task\n        } = action.payload;\n        return { ...state,\n          taskEditing: task\n        };\n      }\n\n    case taskConstant.UPDATE_TASK:\n      {\n        const {\n          task\n        } = action.payload;\n        return { ...state,\n          taskEditing: task\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default tasks;","map":{"version":3,"sources":["/Users/minhtien/Documents/react/project-saga/src/reducers/tasks.js"],"names":["toastError","taskConstant","findIndex","initialState","listTasks","taskEditing","tasks","state","action","type","FETCH_TASK","FETCH_TASK_SUCCESS","data","error","payload","FETCH_TASK_FAILE","console","log","FETCH_FILTER","FILTERED_SUCCESS","ADD_TASK","ADD_TASK_SUCCESS","concat","ADD_TASK_FAILE","TASK_EDITTING","task","UPDATE_TASK"],"mappings":"AAAA,SAASA,UAAT,QAA2B,8BAA3B;AACA,OAAO,KAAKC,YAAZ,MAA8B,oBAA9B;AACA,SAAQC,SAAR,QAAwB,QAAxB;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE,EADQ;AAEnBC,EAAAA,WAAW,EAAE;AAFM,CAArB;;AAKA,MAAMC,KAAK,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,YAAY,CAACS,UAAlB;AAA8B;AAC5B,eAAO,EACL,GAAGH,KADE;AAELH,UAAAA,SAAS,EAAE;AAFN,SAAP;AAID;;AACD,SAAKH,YAAY,CAACU,kBAAlB;AAAsC;AACpC,cAAM;AAAEC,UAAAA,IAAF;AAAQC,UAAAA;AAAR,YAAkBL,MAAM,CAACM,OAA/B;AACAd,QAAAA,UAAU,CAACa,KAAD,CAAV;AACA,eAAO,EACL,GAAGN,KADE;AAELH,UAAAA,SAAS,EAAEQ;AAFN,SAAP;AAID;;AACD,SAAKX,YAAY,CAACc,gBAAlB;AAAoC;AAClC,cAAM;AAAEF,UAAAA;AAAF,YAAYL,MAAM,CAACM,OAAzB;AACAd,QAAAA,UAAU,CAACa,KAAD,CAAV;AACAG,QAAAA,OAAO,CAACC,GAAR,CAAYT,MAAM,CAACM,OAAnB;AACA,eAAO,EACL,GAAGP,KADE;AAELH,UAAAA,SAAS,EAAE;AAFN,SAAP;AAID;;AACD,SAAKH,YAAY,CAACiB,YAAlB;AAAgC;AAC9B,eAAO,EACL,GAAGX;AADE,SAAP;AAGD;;AACD,SAAKN,YAAY,CAACkB,gBAAlB;AAAoC;AAClC,cAAM;AAAEP,UAAAA;AAAF,YAAWJ,MAAM,CAACM,OAAxB;AACA,eAAO,EACL,GAAGP,KADE;AAELH,UAAAA,SAAS,EAAEQ;AAFN,SAAP;AAID;;AACD,SAAKX,YAAY,CAACmB,QAAlB;AAA4B;AAC1B,eAAO,EACL,GAAGb;AADE,SAAP;AAGD;;AACD,SAAKN,YAAY,CAACoB,gBAAlB;AAAoC;AAClC,cAAM;AAAET,UAAAA;AAAF,YAAWJ,MAAM,CAACM,OAAxB;AACA,eAAO,EACL,GAAGP,KADE;AAELH,UAAAA,SAAS,EAAEG,KAAK,CAACH,SAAN,CAAgBkB,MAAhB,CAAuB,CAACV,IAAD,CAAvB;AAFN,SAAP;AAID;;AACD,SAAKX,YAAY,CAACsB,cAAlB;AAAkC;AAChC,cAAM;AAAEV,UAAAA;AAAF,YAAYL,MAAM,CAACM,OAAzB;AACAd,QAAAA,UAAU,CAACa,KAAD,CAAV;AACA,eAAO,EACL,GAAGN;AADE,SAAP;AAGD;;AACD,SAAKN,YAAY,CAACuB,aAAlB;AAAiC;AAC/B,cAAM;AAAEC,UAAAA;AAAF,YAAWjB,MAAM,CAACM,OAAxB;AACA,eAAO,EACL,GAAGP,KADE;AAELF,UAAAA,WAAW,EAAEoB;AAFR,SAAP;AAID;;AACD,SAAKxB,YAAY,CAACyB,WAAlB;AAA+B;AAC7B,cAAM;AAAED,UAAAA;AAAF,YAAWjB,MAAM,CAACM,OAAxB;AACA,eAAO,EACL,GAAGP,KADE;AAELF,UAAAA,WAAW,EAAEoB;AAFR,SAAP;AAID;;AACD;AACE,aAAOlB,KAAP;AAtEJ;AAwED,CAzED;;AA2EA,eAAeD,KAAf","sourcesContent":["import { toastError } from \"../commom/helper/toastHelper\";\nimport * as taskConstant from \"../constants/tasks\";\nimport {findIndex} from 'lodash';\nconst initialState = {\n  listTasks: [],\n  taskEditing: null,\n};\n\nconst tasks = (state = initialState, action) => {\n  switch (action.type) {\n    case taskConstant.FETCH_TASK: {\n      return {\n        ...state,\n        listTasks: [],\n      };\n    }\n    case taskConstant.FETCH_TASK_SUCCESS: {\n      const { data, error } = action.payload;\n      toastError(error);\n      return {\n        ...state,\n        listTasks: data,\n      };\n    }\n    case taskConstant.FETCH_TASK_FAILE: {\n      const { error } = action.payload;\n      toastError(error);\n      console.log(action.payload);\n      return {\n        ...state,\n        listTasks: [],\n      };\n    }\n    case taskConstant.FETCH_FILTER: {\n      return {\n        ...state,\n      };\n    }\n    case taskConstant.FILTERED_SUCCESS: {\n      const { data } = action.payload;\n      return {\n        ...state,\n        listTasks: data,\n      };\n    }\n    case taskConstant.ADD_TASK: {\n      return {\n        ...state,\n      };\n    }\n    case taskConstant.ADD_TASK_SUCCESS: {\n      const { data } = action.payload;\n      return {\n        ...state,\n        listTasks: state.listTasks.concat([data]),\n      };\n    }\n    case taskConstant.ADD_TASK_FAILE: {\n      const { error } = action.payload;\n      toastError(error);\n      return {\n        ...state,\n      };\n    }\n    case taskConstant.TASK_EDITTING: {\n      const { task } = action.payload;\n      return {\n        ...state,\n        taskEditing: task,\n      };\n    }\n    case taskConstant.UPDATE_TASK: {\n      const { task } = action.payload;\n      return {\n        ...state,\n        taskEditing: task,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default tasks;\n"]},"metadata":{},"sourceType":"module"}