{"ast":null,"code":"var _jsxFileName = \"/Users/minhtien/Documents/react/project-saga/src/containers/TaskBorad/index.js\";\nimport React, { Component } from \"react\";\nimport styles from \"./styles\";\nimport { withStyles } from \"@material-ui/core\";\nimport { STATUS } from \"../../constants/index\";\nimport TaskList from \"../../components/TaskList\";\nimport { Grid, Button } from \"@material-ui/core\";\nimport { Add as AddIcon } from \"@material-ui/icons\";\nimport TaskForm from \"../TaskForm\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators, compose } from \"redux\";\nimport * as taskActions from \"../../actions/tasks\";\nimport SearchBox from \"../../components/SearchBox\";\nimport * as modalActions from \"../../actions/modalGlobal\";\nimport ModalGlobal from '../../components/ModalGlobal';\n\nclass TaskBoard extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleFilter = e => {\n      const {\n        onTaskActions\n      } = this.props;\n      const {\n        fetchFilter\n      } = onTaskActions;\n      const {\n        value\n      } = e.target;\n      fetchFilter(value);\n    };\n\n    this.onClose = () => {\n      const {\n        onModalActions\n      } = this.props;\n      const {\n        hideModal\n      } = onModalActions;\n      hideModal();\n    };\n\n    this.onOpenForm = () => {\n      const {\n        onModalActions\n      } = this.props;\n      const {\n        showModal,\n        changeTitleModal,\n        changeContentModal\n      } = onModalActions;\n      showModal();\n      changeTitleModal(\"Thêm mới công việc\"); //changeContentModal(<ModalGlobal onClose={this.onClose}/>)\n    };\n\n    this.renderSearchBox = () => {\n      let html = null;\n      html = /*#__PURE__*/React.createElement(SearchBox, {\n        handlChange: this.handleFilter,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 12\n        }\n      });\n      return html;\n    };\n\n    this.renderTaskForm = () => {\n      const {\n        component,\n        title,\n        showModal\n      } = this.props;\n      let html = null;\n      html = /*#__PURE__*/React.createElement(TaskForm, {\n        component: component,\n        title: title,\n        onClose: this.onClose,\n        showModal: showModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 7\n        }\n      });\n      return html;\n    };\n\n    this.renderTaskBoard = () => {\n      let {\n        listTask\n      } = this.props;\n      let html = null;\n      html = /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 7\n        }\n      }, STATUS.map(status => {\n        const listTaskFilter = listTask.filter(tasks => tasks.status === status.value);\n        return /*#__PURE__*/React.createElement(TaskList, {\n          key: status.value,\n          status: status,\n          tasks: listTaskFilter,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }\n        });\n      }));\n      return html;\n    };\n  }\n\n  componentDidMount() {\n    const {\n      onTaskActions\n    } = this.props;\n    const {\n      fetchTasks\n    } = onTaskActions;\n    fetchTasks();\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.taskboard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.onOpenForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(AddIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }\n    }), \"Th\\xEAm m\\u1EDBi c\\xF4ng vi\\u1EC7c\"), this.renderSearchBox(), this.renderTaskBoard(), this.renderTaskForm());\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    listTask: state.tasks.listTasks,\n    showModal: state.modal.showModal,\n    component: state.modal.component\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTaskActions: bindActionCreators(taskActions, dispatch),\n    onModalActions: bindActionCreators(modalActions, dispatch)\n  };\n};\n\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\nexport default compose(withStyles(styles), withConnect)(TaskBoard);","map":{"version":3,"sources":["/Users/minhtien/Documents/react/project-saga/src/containers/TaskBorad/index.js"],"names":["React","Component","styles","withStyles","STATUS","TaskList","Grid","Button","Add","AddIcon","TaskForm","connect","bindActionCreators","compose","taskActions","SearchBox","modalActions","ModalGlobal","TaskBoard","handleFilter","e","onTaskActions","props","fetchFilter","value","target","onClose","onModalActions","hideModal","onOpenForm","showModal","changeTitleModal","changeContentModal","renderSearchBox","html","renderTaskForm","component","title","renderTaskBoard","listTask","map","status","listTaskFilter","filter","tasks","componentDidMount","fetchTasks","render","classes","taskboard","mapStateToProps","state","listTasks","modal","mapDispatchToProps","dispatch","withConnect"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport styles from \"./styles\";\nimport { withStyles } from \"@material-ui/core\";\nimport { STATUS } from \"../../constants/index\";\nimport TaskList from \"../../components/TaskList\";\nimport { Grid, Button } from \"@material-ui/core\";\nimport { Add as AddIcon } from \"@material-ui/icons\";\nimport TaskForm from \"../TaskForm\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators, compose } from \"redux\";\nimport * as taskActions from \"../../actions/tasks\";\nimport SearchBox from \"../../components/SearchBox\";\nimport * as modalActions from \"../../actions/modalGlobal\";\nimport ModalGlobal from '../../components/ModalGlobal';\nclass TaskBoard extends Component {\n  componentDidMount() {\n    const { onTaskActions } = this.props;\n    const { fetchTasks } = onTaskActions;\n    fetchTasks();\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.taskboard}>\n        <Button variant=\"contained\" color=\"primary\" onClick={this.onOpenForm}>\n          <AddIcon />\n          Thêm mới công việc\n        </Button>\n        {this.renderSearchBox()}\n        {this.renderTaskBoard()}\n        {this.renderTaskForm()}\n      </div>\n    );\n  }\n  handleFilter = (e) => {\n    const { onTaskActions } = this.props;\n    const { fetchFilter } = onTaskActions;\n    const { value } = e.target;\n    fetchFilter(value);\n  };\n\n  onClose = () => {\n    const { onModalActions } = this.props;\n    const { hideModal } = onModalActions;\n    hideModal();\n  };\n  onOpenForm = () => {\n    const { onModalActions } = this.props;\n    const { showModal , changeTitleModal,changeContentModal } = onModalActions;\n    showModal();\n    changeTitleModal(\"Thêm mới công việc\");\n    //changeContentModal(<ModalGlobal onClose={this.onClose}/>)\n  };\n  renderSearchBox = () => {\n    let html = null;\n    html = <SearchBox handlChange={this.handleFilter} />;\n    return html;\n  };\n\n  renderTaskForm = () => {\n    const { component , title,showModal} = this.props;\n    let html = null;\n    html = (\n      <TaskForm\n      component={component}\n      title={title}\n      onClose={this.onClose}\n      showModal={showModal}\n      />\n    );\n    return html;\n  };\n  renderTaskBoard = () => {\n    let { listTask} = this.props;\n\n    let html = null;\n    html = (\n      <Grid container spacing={2}>\n        {STATUS.map((status) => {\n          const listTaskFilter = listTask.filter(\n            (tasks) => tasks.status === status.value\n          );\n          return (\n            <TaskList\n              key={status.value}\n              status={status}\n              tasks={listTaskFilter}\n\n            />\n          );\n        })}\n      </Grid>\n    );\n    return html;\n  };\n}\nconst mapStateToProps = (state) => {\n  return {\n    listTask: state.tasks.listTasks,\n    showModal: state.modal.showModal,\n    component: state.modal.component,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onTaskActions: bindActionCreators(taskActions, dispatch),\n    onModalActions: bindActionCreators(modalActions, dispatch),\n  };\n};\n\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\n\nexport default compose(withStyles(styles), withConnect)(TaskBoard);\n"]},"metadata":{},"sourceType":"module"}