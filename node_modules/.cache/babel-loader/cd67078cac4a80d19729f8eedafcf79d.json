{"ast":null,"code":"var _jsxFileName = \"/Users/minhtien/Documents/react/redux-saga/src/containers/TaskBorad/index.js\";\nimport React, { Component } from 'react';\nimport styles from './styles';\nimport { withStyles } from '@material-ui/core';\nimport { STATUS } from '../../constants/index';\nimport TaskList from '../../containers/TaskList';\nimport { Grid, Button, AddIcon } from '../../commom/ModulMUI';\nimport TaskForm from '../TaskForm';\nconst listTask = [{\n  id: 1,\n  title: \"Play game\",\n  description: \"Ở nhà\",\n  status: 0\n}, {\n  id: 2,\n  title: \"Play Football\",\n  description: \"Ở Truờng\",\n  status: 2\n}, {\n  id: 3,\n  title: \"Play Girl\",\n  description: \"Ở Hotel\",\n  status: 1\n}];\n\nclass TaskBoard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      onOpenForm: false\n    };\n\n    this.onOpenForm = () => {\n      this.setState({\n        onOpenForm: true\n      });\n    };\n\n    this.onClose = () => {\n      this.setState({\n        onOpenForm: false\n      });\n    };\n\n    this.renderTaskForm = () => {\n      let html = null;\n      html = /*#__PURE__*/React.createElement(TaskForm, {\n        onClose: this.onClose,\n        onOpenForm: this.state.onOpenForm,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }\n      });\n      return html;\n    };\n\n    this.renderTaskBoard = () => {\n      let html = null;\n      html = /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }\n      }, STATUS.map(status => {\n        const listTaskFilter = listTask.filter(tasks => tasks.status === status.value);\n        return /*#__PURE__*/React.createElement(TaskList, {\n          key: status.value,\n          status: status,\n          tasks: listTaskFilter,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 32\n          }\n        });\n      }));\n      return html;\n    };\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.taskboard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.onOpenForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(AddIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }\n    }), \"Th\\xEAm m\\u1EDBi c\\xF4ng vi\\u1EC7c\"), this.renderTaskBoard(), this.renderTaskForm());\n  }\n\n}\n\nexport default withStyles(styles)(TaskBoard);","map":{"version":3,"sources":["/Users/minhtien/Documents/react/redux-saga/src/containers/TaskBorad/index.js"],"names":["React","Component","styles","withStyles","STATUS","TaskList","Grid","Button","AddIcon","TaskForm","listTask","id","title","description","status","TaskBoard","state","onOpenForm","setState","onClose","renderTaskForm","html","renderTaskBoard","map","listTaskFilter","filter","tasks","value","render","classes","props","taskboard"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport styles from './styles';\nimport { withStyles } from '@material-ui/core';\nimport { STATUS } from '../../constants/index';\nimport TaskList from '../../containers/TaskList';\nimport {Grid ,Button , AddIcon} from '../../commom/ModulMUI';\nimport TaskForm from '../TaskForm';\n\nconst listTask = [\n    {\n        id: 1,\n        title: \"Play game\",\n        description: \"Ở nhà\",\n        status: 0\n    },\n    {\n        id: 2,\n        title: \"Play Football\",\n        description: \"Ở Truờng\",\n        status: 2\n    }, {\n        id: 3,\n        title: \"Play Girl\",\n        description: \"Ở Hotel\",\n        status: 1\n    }\n]\nclass TaskBoard extends Component {\n\n    state = {\n        onOpenForm : false\n    }\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <div className={classes.taskboard}>\n                <Button variant=\"contained\" color=\"primary\" onClick={this.onOpenForm}>\n                    <AddIcon />Thêm mới công việc\n                </Button>\n\n                {this.renderTaskBoard()}\n                {this.renderTaskForm()}\n            </div>\n        );\n    }\n    onOpenForm = () => {\n        this.setState({\n            onOpenForm : true\n        })\n    }\n\n    onClose = () => {\n        this.setState({\n            onOpenForm : false\n        })\n    }\n    renderTaskForm = () => {\n        let html = null;\n        html = (\n            <TaskForm\n                onClose = {this.onClose}\n                onOpenForm = {this.state.onOpenForm}\n             />\n        )\n        return html;\n    }\n    renderTaskBoard = () => {\n        let html = null;\n        html = (\n            <Grid container spacing={2}>\n                {\n                    STATUS.map((status) => {\n                        const listTaskFilter = listTask.filter(tasks =>\n                            tasks.status === status.value\n                        )\n                        return <TaskList\n                                key ={status.value}\n                                status = {status}\n                                tasks = {listTaskFilter}\n                        />\n                    })\n                }\n            </Grid>\n        )\n        return html;\n    }\n}\n\nexport default withStyles(styles)(TaskBoard);"]},"metadata":{},"sourceType":"module"}