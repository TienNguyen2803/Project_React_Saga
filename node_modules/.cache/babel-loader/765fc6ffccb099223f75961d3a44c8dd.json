{"ast":null,"code":"import { call, delay, fork, put, take } from \"redux-saga/effects\";\nimport * as taskType from \"../constants/tasks\";\nimport { fectchTasks } from \"../apis/tasks\";\nimport { fetchTasksFailed, fetchTasksSuccess } from \"../actions/tasks\";\nimport { hideLoading, showLoading } from '../actions/ui';\n\nfunction* watchFetchTasks() {\n  while (true) {\n    try {\n      yield take(taskType.FETCH_TASK);\n      put(showLoading());\n      const res = yield call(fectchTasks);\n      const {\n        data\n      } = res;\n      yield put(fetchTasksSuccess(data));\n      delay(1000);\n      put(hideLoading());\n    } catch (e) {\n      console.log(e);\n      yield put(fetchTasksFailed(e));\n    }\n  }\n}\n\nfunction* test1() {\n  console.log(\"test 1\");\n  yield true;\n}\n\nfunction* rootSaga() {\n  yield fork(watchFetchTasks);\n  yield fork(test1);\n}\n\nexport default rootSaga;","map":{"version":3,"sources":["/Users/minhtien/Documents/react/project-saga/src/saga/index.js"],"names":["call","delay","fork","put","take","taskType","fectchTasks","fetchTasksFailed","fetchTasksSuccess","hideLoading","showLoading","watchFetchTasks","FETCH_TASK","res","data","e","console","log","test1","rootSaga"],"mappings":"AAAA,SAASA,IAAT,EAAeC,KAAf,EAAsBC,IAAtB,EAA4BC,GAA5B,EAAiCC,IAAjC,QAA6C,oBAA7C;AACA,OAAO,KAAKC,QAAZ,MAA0B,oBAA1B;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,gBAAT,EAA2BC,iBAA3B,QAAoD,kBAApD;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,eAAvC;;AAEA,UAAUC,eAAV,GAA4B;AAC1B,SAAO,IAAP,EAAa;AACX,QAAI;AACF,YAAMP,IAAI,CAACC,QAAQ,CAACO,UAAV,CAAV;AACCT,MAAAA,GAAG,CAACO,WAAW,EAAZ,CAAH;AACD,YAAMG,GAAG,GAAG,MAAMb,IAAI,CAACM,WAAD,CAAtB;AACA,YAAM;AAAEQ,QAAAA;AAAF,UAAWD,GAAjB;AACA,YAAMV,GAAG,CAACK,iBAAiB,CAACM,IAAD,CAAlB,CAAT;AACCb,MAAAA,KAAK,CAAC,IAAD,CAAL;AACAE,MAAAA,GAAG,CAACM,WAAW,EAAZ,CAAH;AACF,KARD,CAQE,OAAOM,CAAP,EAAU;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACA,YAAMZ,GAAG,CAACI,gBAAgB,CAACQ,CAAD,CAAjB,CAAT;AACD;AACF;AACF;;AAED,UAAUG,KAAV,GAAkB;AAChBF,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,QAAM,IAAN;AACD;;AAED,UAAUE,QAAV,GAAqB;AACnB,QAAMjB,IAAI,CAACS,eAAD,CAAV;AACA,QAAMT,IAAI,CAACgB,KAAD,CAAV;AACD;;AAED,eAAeC,QAAf","sourcesContent":["import { call, delay, fork, put, take } from \"redux-saga/effects\";\nimport * as taskType from \"../constants/tasks\";\nimport { fectchTasks } from \"../apis/tasks\";\nimport { fetchTasksFailed, fetchTasksSuccess } from \"../actions/tasks\";\nimport {hideLoading, showLoading} from '../actions/ui';\n\nfunction* watchFetchTasks() {\n  while (true) {\n    try {\n      yield take(taskType.FETCH_TASK);\n       put(showLoading());\n      const res = yield call(fectchTasks);\n      const { data } = res;\n      yield put(fetchTasksSuccess(data));\n       delay(1000)\n       put(hideLoading())\n    } catch (e) {\n      console.log(e);\n      yield put(fetchTasksFailed(e));\n    }\n  }\n}\n\nfunction* test1() {\n  console.log(\"test 1\");\n  yield true;\n}\n\nfunction* rootSaga() {\n  yield fork(watchFetchTasks);\n  yield fork(test1);\n}\n\nexport default rootSaga;\n"]},"metadata":{},"sourceType":"module"}